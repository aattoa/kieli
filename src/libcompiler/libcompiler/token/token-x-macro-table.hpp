// This file is a preprocessor function, parameterized by the KIELI_X_TOKEN_DO macro. It is invoked
// by including it between a define/undef pair. There are no include guards, because this file does
// not declare anything, and may be included multiple times in a translation unit.

// https://en.wikipedia.org/wiki/X_macro

// clang-format off

// Fields: identifier, spelling, description

KIELI_X_TOKEN_DO(error,             "error",    "a lexical error")
KIELI_X_TOKEN_DO(dot,               ".",        "a dot")
KIELI_X_TOKEN_DO(comma,             ",",        "a comma")
KIELI_X_TOKEN_DO(colon,             ":",        "a colon")
KIELI_X_TOKEN_DO(semicolon,         ";",        "a semicolon")
KIELI_X_TOKEN_DO(double_colon,      "::",       "a double colon")
KIELI_X_TOKEN_DO(ampersand,         "&",        "an ampersand")
KIELI_X_TOKEN_DO(asterisk,          "*",        "an asterisk")
KIELI_X_TOKEN_DO(plus,              "+",        "a plus sign")
KIELI_X_TOKEN_DO(equals,            "=",        "an equal sign")
KIELI_X_TOKEN_DO(question,          "?",        "a question mark")
KIELI_X_TOKEN_DO(exclamation,       "!",        "an exclamation mark")
KIELI_X_TOKEN_DO(pipe,              "|",        "a pipe")
KIELI_X_TOKEN_DO(lambda,            "\\",       "a backslash")
KIELI_X_TOKEN_DO(left_arrow,        "<-",       "a left arrow")
KIELI_X_TOKEN_DO(right_arrow,       "->",       "a right arrow")
KIELI_X_TOKEN_DO(paren_open,        "(",        "an opening parenthesis")
KIELI_X_TOKEN_DO(paren_close,       ")",        "a closing parenthesis")
KIELI_X_TOKEN_DO(brace_open,        "{",        "an opening brace")
KIELI_X_TOKEN_DO(brace_close,       "}",        "a closing brace")
KIELI_X_TOKEN_DO(bracket_open,      "[",        "an opening bracket")
KIELI_X_TOKEN_DO(bracket_close,     "]",        "a closing bracket")
KIELI_X_TOKEN_DO(let,               "let",      "a keyword")
KIELI_X_TOKEN_DO(mut,               "mut",      "a keyword")
KIELI_X_TOKEN_DO(immut,             "immut",    "a keyword")
KIELI_X_TOKEN_DO(if_,               "if",       "a keyword")
KIELI_X_TOKEN_DO(else_,             "else",     "a keyword")
KIELI_X_TOKEN_DO(elif,              "elif",     "a keyword")
KIELI_X_TOKEN_DO(for_,              "for",      "a keyword")
KIELI_X_TOKEN_DO(in,                "in",       "a keyword")
KIELI_X_TOKEN_DO(while_,            "while",    "a keyword")
KIELI_X_TOKEN_DO(loop,              "loop",     "a keyword")
KIELI_X_TOKEN_DO(continue_,         "continue", "a keyword")
KIELI_X_TOKEN_DO(break_,            "break",    "a keyword")
KIELI_X_TOKEN_DO(match,             "match",    "a keyword")
KIELI_X_TOKEN_DO(ret,               "ret",      "a keyword")
KIELI_X_TOKEN_DO(discard,           "discard",  "a keyword")
KIELI_X_TOKEN_DO(fn,                "fn",       "a keyword")
KIELI_X_TOKEN_DO(as,                "as",       "a keyword")
KIELI_X_TOKEN_DO(enum_,             "enum",     "a keyword")
KIELI_X_TOKEN_DO(struct_,           "struct",   "a keyword")
KIELI_X_TOKEN_DO(concept_,          "concept",  "a keyword")
KIELI_X_TOKEN_DO(impl,              "impl",     "a keyword")
KIELI_X_TOKEN_DO(alias,             "alias",    "a keyword")
KIELI_X_TOKEN_DO(import_,           "import",   "a keyword")
KIELI_X_TOKEN_DO(export_,           "export",   "a keyword")
KIELI_X_TOKEN_DO(module_,           "module",   "a keyword")
KIELI_X_TOKEN_DO(sizeof_,           "sizeof",   "a keyword")
KIELI_X_TOKEN_DO(typeof_,           "typeof",   "a keyword")
KIELI_X_TOKEN_DO(mv,                "mv",       "a keyword")
KIELI_X_TOKEN_DO(where,             "where",    "a keyword")
KIELI_X_TOKEN_DO(dyn,               "dyn",      "a keyword")
KIELI_X_TOKEN_DO(macro,             "macro",    "a keyword")
KIELI_X_TOKEN_DO(global,            "global",   "a keyword")
KIELI_X_TOKEN_DO(defer,             "defer",    "a keyword")
KIELI_X_TOKEN_DO(underscore,        "_",        "an underscore")
KIELI_X_TOKEN_DO(lower_name,        "lower",    "an uncapitalized identifier")
KIELI_X_TOKEN_DO(upper_name,        "upper",    "a capitalized identifier")
KIELI_X_TOKEN_DO(operator_name,     "op",       "an operator")
KIELI_X_TOKEN_DO(integer_literal,   "int",      "an integer literal")
KIELI_X_TOKEN_DO(floating_literal,  "float",    "a floating-point literal")
KIELI_X_TOKEN_DO(string_literal,    "str",      "a string literal")
KIELI_X_TOKEN_DO(character_literal, "char",     "a character literal")
KIELI_X_TOKEN_DO(boolean_literal,   "bool",     "a boolean literal")
KIELI_X_TOKEN_DO(end_of_input,      "eof",      "the end of input")

// clang-format on
